name: 99 - Apply GitHub Rulesets (manual)

on:
    workflow_dispatch: {}

permissions:
    id-token: write
    contents: read

jobs:
    apply-rulesets:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: github

        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.13.3

            - name: Configure AWS credentials (OIDC)
              uses: aws-actions/configure-aws-credentials@v5
              with:
                  role-to-assume: ${{ vars.AWS_ROLE_ARN }}
                  aws-region: ${{ vars.AWS_REGION }}
                  role-session-name: gha-rulesets-${{ github.run_id }}

            # Ensure the DynamoDB lock table exists (idempotent)
            - name: Ensure DynamoDB lock table exists
              shell: bash
              run: |
                  set -euo pipefail
                  T="${{ vars.TF_STATE_TABLE }}"
                  if ! aws dynamodb describe-table --table-name "$T" >/dev/null 2>&1; then
                    aws dynamodb create-table \
                      --table-name "$T" \
                      --attribute-definitions AttributeName=LockID,AttributeType=S \
                      --key-schema AttributeName=LockID,KeyType=HASH \
                      --billing-mode PAY_PER_REQUEST
                    aws dynamodb wait table-exists --table-name "$T"
                  fi

            - name: Terraform init (S3 backend)
              run: |
                  terraform init -input=false \
                    -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
                    -backend-config="key=${{ vars.TF_STATE_KEY }}/github-rulesets.tfstate" \
                    -backend-config="region=${{ vars.AWS_REGION }}" \
                    -backend-config="dynamodb_table=${{ vars.TF_STATE_TABLE }}" \
                    -backend-config="encrypt=true"

            - name: Terraform plan
              env:
                  TF_VAR_github_token: ${{ secrets.GH_TOKEN_ADMIN }}
                  TF_VAR_github_owner: "bond50"
                  TF_VAR_repo_name: "infra-web-apps-v3"
              run: terraform plan -out=rulesets.tfplan

            # Only apply when you run the workflow on the main branch
            - name: Terraform apply
              if: github.ref == 'refs/heads/main'
              env:
                  TF_VAR_github_token: ${{ secrets.GH_TOKEN_ADMIN }}
                  TF_VAR_github_owner: "bond50"
                  TF_VAR_repo_name: "infra-web-apps-v3"
              run: terraform apply -auto-approve rulesets.tfplan
