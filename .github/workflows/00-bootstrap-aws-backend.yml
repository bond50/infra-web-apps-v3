name: 00 - Bootstrap AWS Backend

on:
  workflow_dispatch: {}
  push:
    paths:
      - "bootstrap/**"
      - ".github/workflows/00-bootstrap-aws-backend.yml"
      - "scripts/**"

permissions:
  contents: read
  actions: write

concurrency:
  group: bootstrap
  cancel-in-progress: false

jobs:
  bootstrap:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: pip install --quiet boto3

      - name: Preflight — verify inputs/secrets/vars
        env:
          MODE: bootstrap
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GH_TOKEN_ADMIN: ${{ secrets.GH_TOKEN_ADMIN }}
        run: python scripts/preflight_required.py

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Configure AWS credentials (temporary bootstrap keys)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Resolve bootstrap config (vars → defaults)
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          TF_VAR_project_name: ${{ vars.TF_VAR_project_name }}
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_STATE_TABLE: ${{ vars.TF_STATE_TABLE }}
          TF_STATE_KEY: ${{ vars.TF_STATE_KEY }}
          GH_TOKEN_ADMIN: ${{ secrets.GH_TOKEN_ADMIN }}
        run: python scripts/bootstrap_resolve.py

      - name: Terraform Init (bootstrap module)
        working-directory: ./bootstrap
        run: terraform init -input=false

      - name: Import-if-present (OIDC, repo vars, S3, DDB, role)
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          REPO: ${{ github.event.repository.name }}
          BUCKET: ${{ steps.bootstrap_resolve.outputs.bucket_name }}
          TABLE: ${{ steps.bootstrap_resolve.outputs.dynamodb_table_name }}
          ROLE_NAME: ${{ steps.bootstrap_resolve.outputs.project_name }}-gha
        run: python scripts/bootstrap_imports.py

      - name: Terraform Apply (bootstrap)
        working-directory: ./bootstrap
        env:
          TF_VAR_github_token: ${{ secrets.GH_TOKEN_ADMIN }}
        run: terraform apply -auto-approve -input=false

      - name: Show outputs
        working-directory: ./bootstrap
        run: terraform output
